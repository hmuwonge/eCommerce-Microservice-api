services:
    mongodb-container:
        image:
            ecommerce-mongodb:latest
        build:
            context: /mongodb
            dockerfile: /Dockerfile
        ports:
         - "27017:27017"
        networks:
         - orders-mongodb-network

    mysql-container:
        image:
            ecommerce-mysql:latest
        build:
            context: /mysql
            dockerfile: /Dockerfile
        environment:
            - MYSQL_ROOT_PASSWORD=admin
        ports:
            - "3306:3306"
        networks:
            - products-mysql-network

    postgres-container:
        image:
            ecommerce-postgres:latest
        build:
            context: /postgres
            dockerfile: /Dockerfile
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=admin
            - POSTGRES_DB=eCommerceUsers
        ports:
            - "5432:5432"
        networks:
            - users-postgres-network

    redis:
        image: redis:alpine
        ports:
         - "6379:6379"
        networks:
         - ecommerce-network

    rabbitmq:
        image: rabbitmq:3.13-management
        ports:
         - "5672:5672"
         - "15672:15672"
        # environment:
        #  - RABBITMQ_DEFAULT_USER=user
        #  - RABBITMQ_DEFAULT_PASSWORD=password
        networks:
         - ecommerce-network
    
    apigateway:
        image: apigateway:latest
        build:
         context: /eComerceSolution.OrdersServices
         dockerfile: /ApiGateway/Dockerfile
        ports:
         - "8080:8080"
        networks:
         - ecommerce-network
        depends_on:         
         - products-microservice
         - users-microservice
         - orders-microservices

    users-microservice:
        image: users-microservice:latest
        build:
         context: /eCommerceSolution.UsersService
         dockerfile: /eCommerce.API/Dockerfile
        environment:
         - ASPNETCORE_HTTP_PORTS=9090
         - ASPNETCORE_ENVIRONMENT=Development
         - POSTGRES_HOST=postgres-container
         - POSTGRES_PORT=5432
         - POSTGRES_DATABASE=eCommerceUsers
         - POSTGRES_USER=postgres
         - POSTGRES_PASSWORD=admin
         - RabbitMQ_Port=5672
         - RabbitMQ_UserName=guest
         - RabbitMQ_Password=guest
         - RabbitMQ_HostName=rabbitmq
         - RabbitMQ_Users_Exchange=users.exchange
        # ports:
        #  - "7878:9090"
        networks:
         - users-postgres-network
         - ecommerce-network
        depends_on:
         - postgres-container

    products-microservice:
        image: products-microservice:latest
        build:
         context: /eCommerceProductsMicroServices
         dockerfile: /ProductsMicroservices.API/Dockerfile
        environment:
        #  - ASPNETCORE_HTTP_PORTS=8080
         - ASPNETCORE_ENVIRONMENT=Development
         - MYSQL_HOST=mysql-container
         - MYSQL_PORT=3306
         - MYSQL_DATABASE=ecommerceproductsdatabase
         - MYSQL_USER=root
         - MYSQL_PASSWORD=admin
         - RabbitMQ_Port=5672
         - RabbitMQ_UserName=guest
         - RabbitMQ_Password=guest
         - RabbitMQ_HostName=rabbitmq
         - RabbitMQ_Products_Exchange=products.exchange
        # ports:
        #  - "8080:8080"
        networks:
         - products-mysql-network
         - ecommerce-network
        depends_on:
         - mysql-container

    orders-microservices:
        image: orders-microservices:latest
        build:
         context:  ./eComerceSolution.OrdersServices
         dockerfile: /OrdersMicroservices.API/Dockerfile
        environment:
         - ASPNETCORE_ENVIRONMENT=Development
         - MONGODB_HOST=mongodb-container
         - MONGODB_PORT=27017
         - MONGODB_DATABASE=OrdersDatabase
         - UsersMicroserviceName=apigateway
         - UsersMicroservicePort=8080
         - ProductsMicroserviceName=apigateway
         - ProductsMicroservicePort=8080
         - REDIS_HOST=redis
         - REDIS_PORT=6379
         - RabbitMQ_Port=5672
         - RabbitMQ_UserName=guest
         - RabbitMQ_Password=guest
         - RabbitMQ_HostName=rabbitmq
         - RabbitMQ_Products_Exchange=products.exchange
         - RabbitMQ_Users_Exchange=users.exchange
        # ports:
        #  - "8080:8080"
        networks:
         - orders-mongodb-network
         - ecommerce-network
        depends_on:
         - mongodb-container
         - rabbitmq
         - redis

networks:
  ecommerce-network:
    driver: bridge
  orders-mongodb-network:
    driver: bridge
  products-mysql-network:
    driver: bridge
  users-postgres-network:
    driver: bridge